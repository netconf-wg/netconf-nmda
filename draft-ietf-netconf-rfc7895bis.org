<# -*- org -*-

This document describes a YANG library that provides information about
the YANG modules, datastores, and datastore schemas used by a network
management server. Simple caching mechanisms are provided to allow
clients to minimize retrieval of this information. This version of the
YANG library supports the Network Management Datastore Architecture by
listing all datastores supported by a network management server and
the schema that is used by each of these datastores.

This document obsoletes RFC 7895.

* Introduction

There is a need for a standard mechanism to expose which YANG modules
^RFC7950^, datastores and datastore schemas
^I-D.ietf-netmod-revised-datastores^ are in use by a network
management server.

This document defines the YANG module "ietf-yang-library" that
provides this informaton. This version of the YANG library is
compatible with the Network Management Datastore Architecture (NMDA)
^I-D.ietf-netmod-revised-datastores^. The previous version of the YANG
library, defined in ^RFC7895^, is not compatible with the NMDA since
it assumes that all datastores have exactly the same schema.  This is
not necessarily true in the NMDA since dynamic configuration datastores
may have their own datastore schema.  Furthermore, the operational
state datastore may support non-configurable YANG modules in addition
to the YANG modules supported by conventional configuration
datastores.

The old YANG library definitions have been retained (for backwards
compability reasons) but the definitions have been marked as
deprecated. For backwards compatability, an NMDA-supporting server
SHOULD populate the deprecated "/modules-state" tree in a
backwards-compatible manner.  The new "/yang-library" tree would be
ignored by legacy clients, while providing all the data needed for
NMDA-aware clients, which would themselves ignore the "/modules-state"
tree.  The recommended approach to populate /modules-state is to
report the schema for YANG modules that are configurable via
conventional datastores and for which config false data nodes are
returned via a NETCONF <get> operation, or equivalent.

The YANG library information can be different on every server and it
can change at runtime or across a server reboot. If a server
implements multiple network management protocols to access the
server's datastores, then each such protocol may have its own
conceptual instantiation of the YANG library.

If a large number of YANG modules are utilized by a server, then the
YANG library contents can be relatively large.  Since the YANG library
contents changes very infrequently, it is important that clients be
able to cache the YANG library contents and easily identify whether
their cache is out of date.

All NETCONF servers supporting YANG 1.1 ^RFC7950^ are required to
support YANG Library (see Section 5.6.4 of RFC 7950). NETCONF servers
implementing the NETCONF extensions to support the NMDA
^I-D.ietf-netconf-nmda-netconf^ must implement at least the version of
the YANG library defined in this document. Similarly, all RESTCONF
servers are required to support YANG Library (see Section 10 of RFC
8040). RESTCONF servers implementing the RESTCONF extensions to
support the NMDA ^I-D.ietf-netconf-nmda-restconf^ must implement at
least the version of the YANG library defined in this document.

The keywords "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in BCP
14, ^RFC2119^.

* Terminology

The following terms are defined in ^RFC7950^:

- module
- submodule
- data node

The following terms are defined in ^I-D.ietf-netmod-revised-datastores^:

- datastore
- datastore schema
- configuration
- configuration datastore
- conventional configuration
- conventional configuration datastore
- operational state
- operational state datastore
- dynamic configuration datastore
- client and server

The following terms are used within this document:

- YANG library: A collection of YANG modules, submodules, datastores,
  and datastore schemas used by a server.

- YANG library checksum: A server-generated checksum of the contents
  of the YANG library.

Tree diagrams used in this document use the notation defined in
^I-D.ietf-netmod-yang-tree-diagrams^.

* Objectives

The following information is needed by a client application (for each
YANG module in the library) to fully utilize the YANG data modeling
language:

- name: The name of the YANG module.

- revision: Each YANG module and submodule within the library SHOULD
have a revision.  This is derived from the most recent revision
statement within the module or submodule.

- submodule list: The name, and if defined, revision of each submodule
used by the module MUST be identified.

- feature list: The name of each YANG feature supported by the
server, in a given datastore schema, MUST be identified.

- deviation list: The name of each YANG module used for deviation
statements, in a given datastore schema, MUST be identified.

In addition, the following information is needed by a client
application for each datastore supported by a server:

- identity: The YANG identity for the datastore.

- schema: The schema (i.e., the set of modules) implemented by the
  datastore.

In order to select one out of several possible data model designs, the
following criteria were used:

+ As efficient as possible for a client to consume.
Since the size of the yang library can be quite large, it should
be possible for clients to cache the yang library information.

+ A dynamic configuration datastore must be able to implement a module
or feature that is not implemented in the conventional configuration
datastores.

+ It must be possible to NOT implement a module or feature in
<operational>, even if it is implemented in some other datastore.
This is required for transition purposes; a server that wants to
implement <operational> should not have to implement all modules at
once.

+ A given module can only be implemented in one revision in all
datastores.  If a module is implemented in more than one
datastores, the same revision is implemented in all these
datastores.

+ Multiple revisions can be used for import, if import-by revision
is used.

+ Make it possible to use the YANG library by schema mount
  ^I-D.ietf-netmod-schema-mount^.

* YANG Library Data Model

The "ietf-yang-library" YANG module provides information about the
modules, submodules, datastores, and datastore schemas supported by a
server. All data nodes in "ietf-yang-library" are "config false", and
thus only accessible in the operational state datastore.

# use @ to bypass oxtradoc in order to get numbered figures
#+BEGIN_EXAMPLE
@<figure anchor="model"><artwork><![CDATA[
@+-----------+
@| datastore |
@+-----------+
@     |
@     | has a
@     V
@+-----------+            +--------+   	      	   +------------+
@| datastore |  union of  | module |  consists of   | modules +	|
@|  schema   |----------->|  set   |--------------->| submodules	|
@+-----------+            +--------+                +------------+
@]]></artwork></figure>

#+END_EXAMPLE

The conceptual model of the YANG library is depicted in
Figure 1. Following the NMDA, every datastore has an associated datastore
schema. A datastore schema is a union of module sets and every module
set is a collection of modules and submodules, including the modules
and submodules used for imports. Note that multiple datastores may
refer to the same datastore schema. Furthermore, it is possible that
individual datastore schema share module sets. A common use case is the
operational state datastore schema which is a superset of the schema
used by conventional configuration datastores.

Below is the YANG Tree Diagram for the "ietf-yang-library" module,
excluding the deprecated "modules-state" tree:

!! include-figure ietf-yang-library.tree

The "/yang-library" container holds the entire YANG library. The
container has the following child nodes:

- The "/yang-library/module-set" contains entries representing module
  sets. The list "/yang-library/module-set/module" enumerates the
  modules that belong to the module set. A module is listed together
  with its submodules (if any), a set of features, and any deviation
  modules. The list "/yang-library/module-set/import-only-module"
  lists all modules (and their submodules) used only for imports.

- The "/yang-library/schema" list contains an entry for each datastore
  schema supported by the server. All conventional configuration
  datastores use the same "schema" list entry. A dynamic configuration
  datastore may use a different datastore schema from the conventional
  configuration datastores, and hence may require a separate "schema"
  entry. A "schema" entry has a leaf-list of references to entries in
  the "module-set" list.  The schema consists of the union of all
  modules in all referenced module sets.

- The "/yang-library/datastore" list contains one entry for each
  datastore supported by the server, and it identifies the datastore
  schema associated with a datastore via a reference to an entry in
  the "schema" list. Each supported conventional configuration
  datastore has a separate entry, pointing to the same "schema" list
  element.

- The "/yang-library/checksum" leaf contains a unique
  implementation-specific identifier representing the current
  information in the YANG library on a specific server.  The value of
  this leaf MUST change whenever the information in the YANG library
  changes. There is no requirement that the same information always
  results in the same "checksum" value. This leaf allows a client to
  fetch all schema information once, cache it, and only refetch it if
  the value of this leaf has been changed. If the value of this leaf
  changes, the server also generates a "yang-library-update"
  notification.

Note that for a NETCONF server implementing the NETCONF extensions to
support the NMDA ^I-D.ietf-netconf-nmda-netconf^, a change of the YANG
library checksum results in a new value for the :yang-library:1.1
capability defined in ^I-D.ietf-netconf-nmda-netconf^.  Thus, if such
a server implements NETCONF notifications ^RFC5277^, and the
notification "netconf-capability-change" ^RFC6470^, a
"netconf-capability-change" notification is generated whenever the
YANG library checksum changes.

* YANG Library YANG Module @library-module@

The "ietf-yang-library" YANG module imports definitions from
"ietf-yang-types" and "ietf-inet-types" defined in ^RFC6991^ and from
"ietf-datastores" defined in ^I-D.ietf-netmod-revised-datastores^.
While the YANG module is defined using YANG version 1.1, the YANG
library supports the YANG modules written in any version of YANG.

RFC Ed.: update the date below with the date of RFC publication and
remove this note.

!! include-figure ietf-yang-library.yang extract-to="ietf-yang-library@2018-01-26.yang"

* IANA Considerations @iana@

RFC 7895 previously registered one URI in the IETF XML registry
^RFC3688^.  This document takes over this registration entry made by
RFC 7895 and changes the Registrant to the IESG according to Section 4
in ^RFC3688^.

  URI: urn:ietf:params:xml:ns:yang:ietf-yang-library

  Registrant Contact: The IESG.

  XML: N/A, the requested URI is an XML namespace.


RFC 7895 previously registered one YANG module in the "YANG Module
Names" registry ^RFC6020^ as follows:

  name:         ietf-yang-library
  namespace:    urn:ietf:params:xml:ns:yang:ietf-yang-library
  prefix:       yanglib
  reference:    RFC 7895

This document takes over this registration entry made by RFC 7895.

* Security Considerations

The YANG module specified in this document defines a schema for data
that is accessed by network management protocols such as NETCONF
^RFC6241^ or RESTCONF ^RFC8040^. The lowest NETCONF layer is the
secure transport layer, and the mandatory-to-implement secure
transport is Secure Shell (SSH) ^RFC6242^. The lowest RESTCONF layer
is HTTPS, and the mandatory-to-implement secure transport is TLS
^RFC5246^.

The NETCONF access control model ^RFC6536^ provides the means to
restrict access for particular NETCONF or RESTCONF users to a
preconfigured subset of all available NETCONF or RESTCONF protocol
operations and content.

Some of the readable data nodes in this YANG module may be considered
sensitive or vulnerable in some network environments.  It is thus
important to control read access (e.g., via get, get-config, or
notification) to these data nodes.  These are the subtrees and data
nodes and their sensitivity/vulnerability:

The "/yang-library" subtree of the YANG library may help an attacker
identify the server capabilities and server implementations with known
bugs since the set of YANG modules supported by a server may reveal
the kind of device and the manufacturer of the device.  Although some
of this information may be available to all NETCONF users via the
NETCONF <hello> message (or similar messages in other management
protocols), this YANG module potentially exposes additional details
that could be of some assistance to an attacker. Server
vulnerabilities may be specific to particular modules, module
revisions, module features, or even module deviations. For example, if
a particular operation on a particular data node is known to cause a
server to crash or significantly degrade device performance, then the
module list information will help an attacker identify server
implementations with such a defect, in order to launch a
denial-of-service attack on the device.

* Acknowledgements

Contributions to this material by Andy Bierman are based upon work
supported by the The Space & Terrestrial Communications Directorate
(S&TCD) under Contract No. W15P7T-13-C-A616. Any opinions, findings
and conclusions or recommendations expressed in this material are
those of the author(s) and do not necessarily reflect the views of
The Space & Terrestrial Communications Directorate (S&TCD).


*! start-appendix

* Summary of Changes from RFC 7895

# FIXME: make sure this is correct and complete

This document updates ^RFC7895^ in the following ways:

- Renamed document title from "YANG Module Library" to "A YANG Data
  Model for the YANG Library".

- Added a new top-level "/yang-library" container to hold the entire
  YANG library providing information about module sets, schemas, and
  datastores.

- Refactored the "/modules-state" container into a new
  "/yang-library/module-set" list.

- Added a new "/yang-library/schema" list and a new
  "/yang-library/datastore" list.

- Added a set of new groupings as replacements for the deprecated
  groupings.

- Added a "yang-library-update" notification as a replacement for the
  deprecated "yang-library-change" notification.

- Deprecated the "/modules-state" tree.

- Deprecated the "/module-list" grouping.

- Deprecated the "/yang-library-change" notification.

* Example YANG Library Instance for a Basic Server

The following example shows the YANG Library of a basic server
implementing the "ietf-interfaces" ^I-D.ietf-netmod-rfc7223bis^ and
"ietf-ip" ^I-D.ietf-netmod-rfc7277bis^ modules in the <running>,
<startup>, and <operational> datastores and the "ietf-hardware"
^I-D.ietf-netmod-entity^ module in the <operational> datastore.

!! include-figure ex-basic.load

{{document:
    name ;
    ipr trust200902;
    category std;
    references back.xml;
    obsoletes 7895;
    title "A YANG Data Model for the YANG Library";
    abbreviation "YANG Library";
    contributor "author:Andy Bierman:YumaWorks:andy@yumaworks.com";
    contributor "author:Martin Bjorklund:Tail-f Systems:mbj@tail-f.com";
    contributor "author:Juergen Schoenwaelder:Jacobs University:j.schoenwaelder@jacobs-university.de";
    contributor "author:Kent Watsen:Juniper Networks:kwatsen@juniper.net";
    contributor "author:Robert Wilton:Cisco Systems:rwilton@cisco.com";
}}
